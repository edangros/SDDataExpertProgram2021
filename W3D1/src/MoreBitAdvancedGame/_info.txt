
/*
W2D3 LittleBitAdvancedGame과 달라진 부분 :
클라이언트님께서 컴플레인을 거셨습니다.
인벤토리 창을 만들어서 화살의 아이템 설명을 보여주고 싶은데 화살 데이터베이스가 왜 없냐고 따지십니다.
또 몬스터 방어력 깎는 독화살도 원한다고 하십니다. 독화살을 맞은 상태에서 공격받을 시 데미지 1을 추가로 입어야 한대요.
심지어 독화살 효과를 3번 중첩까지 되게 하랩니다.
또, 플레이어 기본 공격력 10을 추가하고, 플레이어가 몬스터를 잡을 때마다 레벨업해서 공격력이 5씩 증가해야 한다 합니다.
...하아

이제부터 정말 게임같아지는 구조입니다. 확장성이 W2D4에 비해 엄청나게 강화됩니다.


1. 플레이어 개체를 추가합니다.
플레이어는 게임 내에 '하나밖에' 없을 테니 Static 클래스로 정의할 겁니다.
플레이어 개체는 현재 각 슬롯별로 착용중인 아이탬을 자신의 속성으로 가집니다.
그런데, 조만간 클라이언트님께서 몬스터가 플레이어를 공격할 수도 있게 만들어달라 할 삘입니다. 이걸 감안해서

2. Character 개체를 추가하고, 플레이어와 몬스터 모두 Character 개체를 상속받게 합니다.
Character는 '맞고 때릴 수 있는 개체'입니다.
최대 체력과 공격력, 방어력 등의 'data' 스탯과 현재 체력과 공격력, 방어력 등의 'current' 스텟을 가집니다.
동시에 'status'라는 상태이상 개체를 추가합시다.(독화살...독화살....!)

3. 활과 화살의 캡슐화가 덜되어있었습니다. 활에만 있는 메서드를 활 밖에서 사용해야 했습니다. 이를 해결합니다.
플레이어 개체가 추가되었으니 활과 화살은 플레이어의 '아이탬 슬롯'에 저장할 수 있겠네요
따라서 이제 활은 자기가 쏘는 화살을 기억할 필요가 없습니다. 플레이어가 들고 있으니까요
화살도 자기가 쏘는 활을 기억할 필요가 없습니다. 플레이어가 들고 있으니까요.
그저 플레이어가 누구인지만 알면 됩니다.


4. '역할 사슬 패턴'이라는 걸로 상태이상을 구현할겁니다. 분명히 클라이언트께서 독화살 말고 다른것도 필요하다 할 거에요.
역할 사슬 패턴은 컨베이어벨트와 같은 겁니다. 하나의 개체를 여러 공정자들이 순차적으로 고쳐서 최종적인 결과를 만듭니다.
예를 들어 독화살 3중첩 상태라면 독화살 3개가 몬스터를 잡고 데미지를 주는데, 독화살 내에서는 한 번 데미지를 깎게만 하지만
독화살 3개가 일렬로 서서 들어오는 재료(몬스터)를 가공해서 완성품(체력 깎인 몬스터)를 내뱉을 겁니다.

5. 메인루프도 너무 복잡했어요. 이제 '스테이지'라는 클래스를 구현해서 해당 클래스 내에서 전투를 다룰겁니다.

 */

